# Generated by Django 5.2.6 on 2025-09-08 23:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AthleteProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exercise', models.CharField(max_length=100)),
                ('best_weight', models.FloatField()),
                ('estimated_1rm', models.FloatField(blank=True, null=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('athlete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TrainingBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('periodization', models.CharField(choices=[('LINEAL', 'Lineal'), ('DUP', 'DUP'), ('BLOQUES', 'Bloques')], default='LINEAL', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('goal_competition_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('athlete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to=settings.AUTH_USER_MODEL)),
                ('coach', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TrainingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='training.trainingblock')),
            ],
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('sets', models.IntegerField(default=3)),
                ('reps', models.IntegerField(default=5)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('rpe', models.FloatField(blank=True, null=True)),
                ('weight_actual', models.FloatField(blank=True, null=True)),
                ('rpe_actual', models.FloatField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='training.trainingsession')),
            ],
        ),
        migrations.CreateModel(
            name='CoachAthlete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(auto_now_add=True)),
                ('athlete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coaches', to=settings.AUTH_USER_MODEL)),
                ('coach', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='athletes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('coach', 'athlete')},
            },
        ),
    ]
